{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from 'axios';\nvar BASE_URL = 'http://192.168.1.8:3000/Group';\nvar groupService = function () {\n  function groupService() {\n    _classCallCheck(this, groupService);\n  }\n  _createClass(groupService, [{\n    key: \"addGroup\",\n    value: function () {\n      var _addGroup = _asyncToGenerator(function* (group) {\n        try {\n          var response = yield axios.post(`${BASE_URL}`, group);\n          var formData = new FormData();\n          formData.append('username', group.name);\n          formData.append('descricao', group.descricao);\n          var responsePhoto = yield fetch(group.photo);\n          var blob = yield responsePhoto.blob();\n          formData.append('photo', blob, 'photo.jpg');\n          var uploadResponse = yield axios.post(BASE_URL + 'addGroup', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          return uploadResponse.status === 201;\n        } catch (error) {\n          console.error('Erro ao adicionar grupo:', error);\n          return false;\n        }\n      });\n      function addGroup(_x) {\n        return _addGroup.apply(this, arguments);\n      }\n      return addGroup;\n    }()\n  }, {\n    key: \"getGroupById\",\n    value: function () {\n      var _getGroupById = _asyncToGenerator(function* (groupId) {\n        try {\n          var response = yield axios.get(`${BASE_URL}?id=${groupId}`);\n          return response.data;\n        } catch (error) {\n          console.error('Erro ao buscar usuário pelo ID:', error);\n          return {\n            id: 0,\n            name: '',\n            descricao: '',\n            quantidade: 0,\n            valor: 0,\n            data: '',\n            photo: ''\n          };\n        }\n      });\n      function getGroupById(_x2) {\n        return _getGroupById.apply(this, arguments);\n      }\n      return getGroupById;\n    }()\n  }, {\n    key: \"getAllGroups\",\n    value: function () {\n      var _getAllGroups = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`${BASE_URL}`);\n          return response.data;\n        } catch (error) {\n          console.error('Erro ao buscar grupo pelo ID:', error);\n          return null;\n        }\n      });\n      function getAllGroups() {\n        return _getAllGroups.apply(this, arguments);\n      }\n      return getAllGroups;\n    }()\n  }, {\n    key: \"editGroup\",\n    value: function () {\n      var _editGroup = _asyncToGenerator(function* (groupId, editedGroupData) {\n        try {\n          var response = yield axios.put(`${BASE_URL}/groups/${groupId}`, editedGroupData);\n          return response.status === 200;\n        } catch (error) {\n          console.error('Erro ao editar grupo:', error);\n          return false;\n        }\n      });\n      function editGroup(_x3, _x4) {\n        return _editGroup.apply(this, arguments);\n      }\n      return editGroup;\n    }()\n  }]);\n  return groupService;\n}();\nexport default groupService;","map":{"version":3,"names":["axios","BASE_URL","groupService","_classCallCheck","_createClass","key","value","_addGroup","_asyncToGenerator","group","response","post","formData","FormData","append","name","descricao","responsePhoto","fetch","photo","blob","uploadResponse","headers","status","error","console","addGroup","_x","apply","arguments","_getGroupById","groupId","get","data","id","quantidade","valor","getGroupById","_x2","_getAllGroups","getAllGroups","_editGroup","editedGroupData","put","editGroup","_x3","_x4"],"sources":["C:/Users/loray/OneDrive/Documents/Teste/my-app/src/services/groupService.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { Group } from '../types/group';\r\nimport { Image } from 'react-native';\r\n\r\nconst BASE_URL = 'http://192.168.1.8:3000/Group';//'https://localhost:7217/api/User/'\r\n\r\nclass groupService {\r\n\r\n    constructor() {\r\n        // Se necessário, adicione inicializações aqui\r\n      }\r\n\r\n      async addGroup(group: Group): Promise<boolean> {\r\n        try {\r\n        const response = await axios.post(`${BASE_URL}`, group);\r\n        \r\n        const formData = new FormData();\r\n        formData.append('username', group.name);\r\n        formData.append('descricao', group.descricao);\r\n    \r\n    \r\n        const responsePhoto = await fetch(group.photo);\r\n    \r\n        const blob = await responsePhoto.blob();\r\n    \r\n        formData.append('photo', blob, 'photo.jpg');\r\n    \r\n        const uploadResponse = await axios.post(BASE_URL+'addGroup', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        \r\n          return uploadResponse.status === 201; // Retorna true se o usuário foi adicionado com sucesso\r\n        \r\n        } catch (error) {\r\n          console.error('Erro ao adicionar grupo:', error);\r\n          return false; // Retorna false em caso de erro\r\n        }\r\n      }\r\n\r\n  async getGroupById(groupId: number): Promise<Group> {\r\n    try {\r\n        const response: AxiosResponse<Group> = await axios.get(`${BASE_URL}?id=${groupId}`);             \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Erro ao buscar usuário pelo ID:', error);\r\n        return { id: 0, name: '', descricao: '' , quantidade: 0, valor: 0, data: '', photo:''} ;\r\n    }\r\n  }\r\n\r\n  async getAllGroups(): Promise<Group[]> {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}`);\r\n      return response.data;\r\n      \r\n    } catch (error) {\r\n        console.error('Erro ao buscar grupo pelo ID:', error);\r\n        return null;\r\n    }\r\n\r\n  }\r\n  \r\n  async editGroup(groupId: number, editedGroupData: Partial<Group>): Promise<boolean> {\r\n    try {\r\n        const response = await axios.put(`${BASE_URL}/groups/${groupId}`, editedGroupData);\r\n        return response.status === 200; // Retorna true se a edição for bem-sucedida\r\n    } catch (error) {\r\n        console.error('Erro ao editar grupo:', error);\r\n        return false; // Retorna false em caso de erro\r\n  }\r\n}\r\n\r\n}\r\n\r\nexport default groupService;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAyB,OAAO;AAI5C,IAAMC,QAAQ,GAAG,+BAA+B;AAAC,IAE3CC,YAAY;EAEd,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;EAEZ;EAACE,YAAA,CAAAF,YAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,CAED,WAAeC,KAAY,EAAoB;QAC7C,IAAI;UACJ,IAAMC,QAAQ,SAASV,KAAK,CAACW,IAAI,CAAE,GAAEV,QAAS,EAAC,EAAEQ,KAAK,CAAC;UAEvD,IAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;UAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEL,KAAK,CAACM,IAAI,CAAC;UACvCH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,KAAK,CAACO,SAAS,CAAC;UAG7C,IAAMC,aAAa,SAASC,KAAK,CAACT,KAAK,CAACU,KAAK,CAAC;UAE9C,IAAMC,IAAI,SAASH,aAAa,CAACG,IAAI,CAAC,CAAC;UAEvCR,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEM,IAAI,EAAE,WAAW,CAAC;UAE3C,IAAMC,cAAc,SAASrB,KAAK,CAACW,IAAI,CAACV,QAAQ,GAAC,UAAU,EAAEW,QAAQ,EAAE;YACnEU,OAAO,EAAE;cACL,cAAc,EAAE;YACpB;UACJ,CAAC,CAAC;UAEA,OAAOD,cAAc,CAACE,MAAM,KAAK,GAAG;QAEtC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChD,OAAO,KAAK;QACd;MACF,CAAC;MAAA,SAAAE,SAAAC,EAAA;QAAA,OAAApB,SAAA,CAAAqB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,QAAA;IAAA;EAAA;IAAArB,GAAA;IAAAC,KAAA;MAAA,IAAAwB,aAAA,GAAAtB,iBAAA,CAEL,WAAmBuB,OAAe,EAAkB;QAClD,IAAI;UACA,IAAMrB,QAA8B,SAASV,KAAK,CAACgC,GAAG,CAAE,GAAE/B,QAAS,OAAM8B,OAAQ,EAAC,CAAC;UACnF,OAAOrB,QAAQ,CAACuB,IAAI;QACxB,CAAC,CAAC,OAAOT,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;UACvD,OAAO;YAAEU,EAAE,EAAE,CAAC;YAAEnB,IAAI,EAAE,EAAE;YAAEC,SAAS,EAAE,EAAE;YAAGmB,UAAU,EAAE,CAAC;YAAEC,KAAK,EAAE,CAAC;YAAEH,IAAI,EAAE,EAAE;YAAEd,KAAK,EAAC;UAAE,CAAC;QAC1F;MACF,CAAC;MAAA,SAAAkB,aAAAC,GAAA;QAAA,OAAAR,aAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAQ,YAAA;IAAA;EAAA;IAAAhC,GAAA;IAAAC,KAAA;MAAA,IAAAiC,aAAA,GAAA/B,iBAAA,CAED,aAAuC;QACrC,IAAI;UACF,IAAME,QAAQ,SAASV,KAAK,CAACgC,GAAG,CAAE,GAAE/B,QAAS,EAAC,CAAC;UAC/C,OAAOS,QAAQ,CAACuB,IAAI;QAEtB,CAAC,CAAC,OAAOT,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,OAAO,IAAI;QACf;MAEF,CAAC;MAAA,SAAAgB,aAAA;QAAA,OAAAD,aAAA,CAAAX,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAW,YAAA;IAAA;EAAA;IAAAnC,GAAA;IAAAC,KAAA;MAAA,IAAAmC,UAAA,GAAAjC,iBAAA,CAED,WAAgBuB,OAAe,EAAEW,eAA+B,EAAoB;QAClF,IAAI;UACA,IAAMhC,QAAQ,SAASV,KAAK,CAAC2C,GAAG,CAAE,GAAE1C,QAAS,WAAU8B,OAAQ,EAAC,EAAEW,eAAe,CAAC;UAClF,OAAOhC,QAAQ,CAACa,MAAM,KAAK,GAAG;QAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,OAAO,KAAK;QAClB;MACF,CAAC;MAAA,SAAAoB,UAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAL,UAAA,CAAAb,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAe,SAAA;IAAA;EAAA;EAAA,OAAA1C,YAAA;AAAA;AAID,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}