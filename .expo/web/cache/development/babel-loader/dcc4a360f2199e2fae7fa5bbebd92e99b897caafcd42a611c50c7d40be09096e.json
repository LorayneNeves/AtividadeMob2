{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from 'axios';\nvar BASE_URL = 'http://192.168.1.8:3000/User';\nvar userService = function () {\n  function userService() {\n    _classCallCheck(this, userService);\n  }\n  _createClass(userService, [{\n    key: \"addUser\",\n    value: function () {\n      var _addUser = _asyncToGenerator(function* (user) {\n        try {\n          var response = yield axios.post(`${BASE_URL}`, user);\n          var formData = new FormData();\n          formData.append('username', user.username);\n          formData.append('password', user.password);\n          var responsePhoto = yield fetch(user.photo);\n          var blob = yield responsePhoto.blob();\n          formData.append('photo', blob, 'photo.jpg');\n          var uploadResponse = yield axios.post(BASE_URL + '/addUser', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          return {\n            success: uploadResponse.status === 201,\n            message: 'Usuário adicionado com sucesso!'\n          };\n        } catch (error) {\n          console.error('Usuário adicionado com sucesso!', error);\n          return {\n            success: false,\n            message: 'Usuário adicionado com sucesso!'\n          };\n        }\n      });\n      function addUser(_x) {\n        return _addUser.apply(this, arguments);\n      }\n      return addUser;\n    }()\n  }, {\n    key: \"validateUser\",\n    value: function () {\n      var _validateUser = _asyncToGenerator(function* (username, password) {\n        try {\n          var response = yield axios.get(`${BASE_URL}?username=${username}&password=${password}`);\n          if (response.data.length === 0) {\n            return false;\n          }\n          return response.status === 200;\n        } catch (error) {\n          console.error('Erro ao validar usuário:', error);\n          return false;\n        }\n      });\n      function validateUser(_x2, _x3) {\n        return _validateUser.apply(this, arguments);\n      }\n      return validateUser;\n    }()\n  }, {\n    key: \"getUserById\",\n    value: function () {\n      var _getUserById = _asyncToGenerator(function* (userId) {\n        try {\n          var response = yield axios.get(`${BASE_URL}?id=${userId}`);\n          return response.data;\n        } catch (error) {\n          console.error('Erro ao buscar usuário pelo ID:', error);\n          return {\n            id: 0,\n            username: '',\n            password: ''\n          };\n        }\n      });\n      function getUserById(_x4) {\n        return _getUserById.apply(this, arguments);\n      }\n      return getUserById;\n    }()\n  }, {\n    key: \"getAllUsers\",\n    value: function () {\n      var _getAllUsers = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`${BASE_URL}`);\n          return response.data;\n        } catch (error) {\n          console.error('Erro ao buscar usuário pelo ID:', error);\n          return null;\n        }\n      });\n      function getAllUsers() {\n        return _getAllUsers.apply(this, arguments);\n      }\n      return getAllUsers;\n    }()\n  }]);\n  return userService;\n}();\nexport default userService;","map":{"version":3,"names":["axios","BASE_URL","userService","_classCallCheck","_createClass","key","value","_addUser","_asyncToGenerator","user","response","post","formData","FormData","append","username","password","responsePhoto","fetch","photo","blob","uploadResponse","headers","success","status","message","error","console","addUser","_x","apply","arguments","_validateUser","get","data","length","validateUser","_x2","_x3","_getUserById","userId","id","getUserById","_x4","_getAllUsers","getAllUsers"],"sources":["C:/Users/loray/OneDrive/Documents/Teste/my-app/src/services/userService.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { User } from '../types/types';\r\n\r\n\r\nconst BASE_URL = 'http://192.168.1.8:3000/User';//'https://localhost:7217/api/User/'\r\n\r\nclass userService {\r\n\r\n    constructor() {\r\n        // Se necessário, adicione inicializações aqui\r\n      }\r\n\r\n  async addUser(user: User): Promise<{ success: boolean, message: string }> {\r\n    try {\r\n    const response = await axios.post(`${BASE_URL}`, user);\r\n    \r\n    const formData = new FormData();\r\n    formData.append('username', user.username);\r\n    formData.append('password', user.password);\r\n\r\n    const responsePhoto = await fetch(user.photo);\r\n\r\n    const blob = await responsePhoto.blob();\r\n\r\n    formData.append('photo', blob, 'photo.jpg');\r\n\r\n    const uploadResponse = await axios.post(BASE_URL + '/addUser', formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        },\r\n    });\r\n    \r\n      return { success: uploadResponse.status === 201, message: 'Usuário adicionado com sucesso!' };\r\n    \r\n    } catch (error) {\r\n      console.error('Usuário adicionado com sucesso!', error);\r\n    return { success: false, message: 'Usuário adicionado com sucesso!' };\r\n    }\r\n  }\r\n\r\n  async validateUser(username: string, password: string): Promise<boolean> {\r\n    try {\r\n        const response: AxiosResponse<User[]> = await axios.get(`${BASE_URL}?username=${username}&password=${password}`);\r\n        //na aplicação de vocês não retorna array não e o metodo sera um post que retorna um unico usuario.\r\n        if (response.data.length === 0) {\r\n          return false;\r\n        }\r\n  \r\n        return response.status === 200; \r\n    } catch (error) {\r\n      console.error('Erro ao validar usuário:', error);\r\n      return false; // Retorna false em caso de erro\r\n    }\r\n  }\r\n\r\n  async getUserById(userId: number): Promise<User> {\r\n    try {\r\n        const response: AxiosResponse<User> = await axios.get(`${BASE_URL}?id=${userId}`);             \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Erro ao buscar usuário pelo ID:', error);\r\n        return { id: 0, username: '', password: '' } ;\r\n    }\r\n\r\n}\r\n\r\n  async getAllUsers(): Promise<User[]> {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}`);\r\n      return response.data;\r\n      \r\n    } catch (error) {\r\n        console.error('Erro ao buscar usuário pelo ID:', error);\r\n        return null;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default userService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}